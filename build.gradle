buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

evaluationDependsOn(":ZeroCore2-1.18")

file('build.properties').withReader {

    def properties = new Properties()
	
    properties.load(it)
    project.ext.config = new ConfigSlurper().parse properties
}

version = "${config.minecraft_version}-${config.mod_version_major}.${config.mod_version_minor}.${config.mod_version_patch}"
group = 'it.zerono.mods.extremereactors'
archivesBaseName = 'ExtremeReactors2'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {

    mappings channel: 'official', version: config.minecraft_mappings

    //TEMP
    accessTransformer file('src/main/resources/META-INF/accesstransformer.cfg')

	def runDir = file("${rootProject.projectDir}/runs/run-${config.minecraft_version}")

    if (!runDir.exists()) {
        runDir = file("run-${config.minecraft_version}")
    }

    def serverDir = file("${rootProject.projectDir}/runs/server-${config.minecraft_version}")

    if (!serverDir.exists()) {
        serverDir = file("server-${config.minecraft_version}")
    }

    runs {
        client {

            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"

            workingDirectory runDir
			
            mods {
                zerocore {
                    source project(':ZeroCore2-1.18').sourceSets.main
                }

                bigreactors {
                    source sourceSets.main
                }

                bigreactorstest {
                    source sourceSets.test
                }
            }
        }

        server {

            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            
			workingDirectory serverDir
			
            mods {
                zerocore {
                    source project(':ZeroCore2-1.18').sourceSets.main
                }

                bigreactors {
                    source sourceSets.main
                }

                bigreactorstest {
                    source sourceSets.test
                }
            }
        }

        data {

            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"

            workingDirectory runDir
            args '--mod', 'bigreactors', '--all',
                    '--existing', file('src/main/resources/'),
                    '--existing', file('src/generated/resources/'),
                    '--output', file('src/generated/resources/')

            mods {
                zerocore {
                    source project(':ZeroCore2-1.18').sourceSets.main
                }

                bigreactors {
                    source sourceSets.main
                }

                bigreactorstest {
                    source sourceSets.test
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

processResources {

	inputs.property "mod_version", version
	inputs.property "mod_name", config.mod_name
    inputs.property "minecraft_versionrange", config.minecraft_versionrange
	inputs.property "forge_versionrange", config.forge_versionrange
    inputs.property "loader_versionrange", config.loader_versionrange
	inputs.property "zerocore_versionrange", config.zerocore_versionrange

    from(sourceSets.main.resources.srcDirs) {
	
        include 'ExtremeReactors2-1.18/src/main/resources/META-INF/mods.toml'
        expand 'mod_version': version, 
				'mod_name': config.mod_name,
				'minecraft_versionrange': config.minecraft_versionrange,
				'forge_versionrange': config.forge_versionrange,
                'loader_versionrange': config.loader_versionrange,
				'zerocore_versionrange': config.zerocore_versionrange
    }
}

repositories {

    // jei
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }

    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }

    // cc-tweaked
    maven {
        url 'https://squiddev.cc/maven/'
    }

    // patchouli
    maven {
        url 'https://maven.blamejared.com'
    }

    // cursemaven
    maven {
        url 'https://www.cursemaven.com'
    }
}

dependencies {
	minecraft "net.minecraftforge:forge:${config.minecraft_version}-${config.forge_version}"
    implementation project(':ZeroCore2-1.18')

    // JEI
    compileOnly fg.deobf("mezz.jei:jei-${config.minecraft_version}:${config.jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${config.minecraft_version}:${config.jei_version}")

	// cc-tweaked
    implementation fg.deobf("org.squiddev:cc-tweaked-${config.minecraft_version}:${config.cctweaked_version}")

	// patchouli
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${config.patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${config.patchouli_version}")

    // mekanism
    compileOnly "mekanism:Mekanism:${config.mekanism_version}:api"
    runtimeOnly fg.deobf("mekanism:Mekanism:${config.mekanism_version}")
    runtimeOnly fg.deobf("mekanism:Mekanism:${config.mekanism_version}:additions")
    runtimeOnly fg.deobf("mekanism:Mekanism:${config.mekanism_version}:generators")
    runtimeOnly fg.deobf("mekanism:Mekanism:${config.mekanism_version}:tools")


	// constructionwand
    implementation fg.deobf("curse.maven:constructionwand-399558:3712396")
}

task extremereactors_apiJar(type: Jar) {

    from(sourceSets.main.allJava) {
        include 'it/zerono/mods/extremereactors/api/**'
    }
    from (sourceSets.main.output) {
        include 'it/zerono/mods/extremereactors/api/**'
    }

    classifier = 'api'
}

jar {

	//classifier = 'universal'
	finalizedBy 'reobfJar'

    manifest {
        attributes 'Specification-Title': config.mod_name
        attributes 'Specification-Vendor': 'ZeroNoRyouki'
        attributes 'Specification-Version': "2"
        attributes 'Implementation-Title': config.mod_name
        attributes 'Implementation-Vendor': 'ZeroNoRyouki'
        attributes 'Implementation-Version': version
        attributes 'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    }	
}

publish.dependsOn('reobfJar')

publishing {

    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            artifact jar
            artifact extremereactors_apiJar
        }
    }

    repositories {
        maven {
            url "file:///${rootProject.projectDir}/../Maven"
        }
    }
}
